(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[538],{2416:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return g},frontMatter:function(){return m},metadata:function(){return u},toc:function(){return h}});var o=n(2122),a=n(9756),r=n(7294),l=n(3905),s=n(6010),i="tableOfContentsInline_3fWc";function d(e){var t=e.toc,n=e.isChild;return t.length?r.createElement("ul",{className:n?"":"table-of-contents"},t.map((function(e){return r.createElement("li",{key:e.id},r.createElement("a",{href:"#"+e.id,dangerouslySetInnerHTML:{__html:e.value}}),r.createElement(d,{isChild:!0,toc:e.children}))}))):null}var p=function(e){var t=e.toc;return r.createElement("div",{className:(0,s.Z)(i)},r.createElement(d,{toc:t}))},c=["components"],m={sidebar_position:2},u={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Table of contents",source:"@site/docs/getting-started.mdx",sourceDirName:".",slug:"/getting-started",permalink:"/docusaurus-mdx/docs/getting-started",editUrl:"https://github.com/esterfania/docusaurus-mdx/tree/main/docs/getting-started.mdx",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docusaurus-mdx/docs/intro"},next:{title:"Table of components",permalink:"/docusaurus-mdx/docs/table-of-components"}},h=[{value:"Hello World",id:"hello-world",children:[]},{value:"Syntax",id:"syntax",children:[{value:"Markdown",id:"markdown",children:[]},{value:"JSX",id:"jsx",children:[]},{value:"MDX",id:"mdx",children:[]}]},{value:"Working with components",id:"working-with-components",children:[]}],k={toc:h};function g(e){var t=e.components,n=(0,a.Z)(e,c);return(0,l.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"table-of-contents"},"Table of contents"),(0,l.kt)(p,{toc:h,mdxType:"TOCInline"}),(0,l.kt)("h2",{id:"hello-world"},"Hello World"),(0,l.kt)("p",null,"The smallest MDX example looks like this:"),(0,l.kt)("p",null,"It displays a heading saying \u201cHello, world!\u201d on the page. You could also write it like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-md"},"## Hello, world!\n")),(0,l.kt)("p",null,"This displays the same heading."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h2>Hello, world!</h2>\n")),(0,l.kt)("h2",{id:"syntax"},"Syntax"),(0,l.kt)("p",null,"MDX syntax can be boiled down to being JSX in Markdown. It\u2019s a superset of Markdown syntax that also supports importing, exporting, and JSX."),(0,l.kt)("h3",{id:"markdown"},"Markdown"),(0,l.kt)("p",null,"Traditionally, Markdown is used to generate HTML. Many developers like writing markup in Markdown as it often looks more like what\u2019s intended and it is typically terser. Instead of the following HTML:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<blockquote>\n  <p>A blockquote with <em>some</em> emphasis.</p>\n</blockquote>\n")),(0,l.kt)("p",null,"You can write the equivalent in Markdown (or MDX) like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-md"},"> A blockquote with _some_ emphasis.\n")),(0,l.kt)("p",null,"Markdown is good for ",(0,l.kt)("strong",null,"content"),". MDX supports standard"," ",(0,l.kt)("a",{href:"https://daringfireball.net/projects/markdown/syntax"},"Markdown syntax"),". It\u2019s important to understand Markdown in order to learn MDX."),(0,l.kt)("h3",{id:"jsx"},"JSX"),(0,l.kt)("p",null,"Recently, more and more developers have started using"," ",(0,l.kt)("a",{href:"https://reactjs.org/docs/introducing-jsx.html"},"JSX")," to generate HTML markup. JSX is typically combined with a frontend framework like React or Vue. These frameworks add support for components, which let you change repeating things like the following markup:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h2>Hello, Venus!</h2>\n<h2>Hello, Mars!</h2>\n")),(0,l.kt)("p",null,"\u2026to JSX (or MDX) like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<Welcome name="Venus" />\n<Welcome name="Mars" />\n')),(0,l.kt)("p",null,"JSX is good for ",(0,l.kt)("strong",null,"components"),". It makes repeating things more clear and allows for separation of concerns. MDX fully supports"," ",(0,l.kt)("a",{href:"https://reactjs.org/docs/introducing-jsx.html"},"JSX syntax"),". Any line that start with the ",(0,l.kt)("code",null,"<")," character starts a JSX block."),(0,l.kt)("h3",{id:"mdx"},"MDX"),(0,l.kt)("p",null,"We love HTML, but we\u2019ve created MDX to let you combine the benefits of Markdown with the benefits of JSX. The following example shows how they can be combined. It\u2019s interactive so go ahead and change the code!"),(0,l.kt)("p",null,"Below is a JSX block:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'<div style={{ padding: "10px 30px", backgroundColor: "tomato" }}>\n  <h2>Try making this heading have the color green</h2>\n</div>\n')),(0,l.kt)("p",null,"MDX supports two more features: ",(0,l.kt)("a",{href:"#imports"},"imports")," and"," ",(0,l.kt)("a",{href:"#exports"},"exports"),"."),(0,l.kt)("h4",{id:"imports"},"Imports"),(0,l.kt)("p",null,(0,l.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/import"},(0,l.kt)("code",null,"import")," (ES2015)"),"can be used to import components, data, and documents."),(0,l.kt)("h5",{id:"components"},"Components"),(0,l.kt)("p",null,"You can import components, such as your own or from"," ",(0,l.kt)("a",{href:"https://rebassjs.org"},"rebass"),", like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Box, Heading, Text } from 'rebass'\n\n# Here is a JSX block\n\nIt is using imported components!\n\n<Box>\n  <Heading>Here's a JSX block</Heading>\n  <Text>It's pretty neat</Text>\n</Box>\n")),(0,l.kt)("h5",{id:"data"},"Data"),(0,l.kt)("p",null,"You can also import data that you want to display:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import snowfallData from './snowfall.json'\nimport BarChart from './charts/BarChart'\n\n# Recent snowfall trends\n\n<p>\n    2019 has been a particularly snowy year when compared to the last decade.\n</p>\n\n<BarChart data={snowfallData} />\n")),(0,l.kt)("h5",{id:"documents"},"Documents"),(0,l.kt)("p",null,"You can embed MDX documents in other documents. This is also known as"," ",(0,l.kt)("a",{href:"https://en.wikipedia.org/wiki/Transclusion"},"transclusion"),". You can achieve this by importing an ",(0,l.kt)("code",null,".mdx")," (or ",(0,l.kt)("code",null,".md"),") file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import License from './license.md'\nimport Contributing from './docs/contributing.mdx'\n\n# Hello, world!\n\n<License />\n\n---\n\n<Contributing />\n")),(0,l.kt)("h5",{id:"exports"},"Exports"),(0,l.kt)("p",null,(0,l.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export"},(0,l.kt)("code",null,"export")," (ES2015)")," ","can be used to export data and components. For example, you can export metadata like which layout to use or the authors of a document. It\u2019s a mechanism for an imported MDX file to communicate with the thing that imports it."),(0,l.kt)("p",null,"Say we import our MDX file, using webpack and React, like so:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},'import React from "react";\nimport MDXDocument, { metadata } from "posts/post.mdx";\n\nexport default () => (\n  <>\n    <MDXDocument />\n    <footer>\n      <p>\n        By: {metadata.authors.map((author) => author.name).join(", ") + "."}\n      </p>\n    </footer>\n  </>\n);\n')),(0,l.kt)("p",null,"And our MDX file looks as follows (note the ",(0,l.kt)("code",null,"export"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="posts/post.mdx"',title:'"posts/post.mdx"'},"import { sue, fred } from '../data/authors'\n\nexport const metadata = {\n  authors: [sue, fred]\n}\n\n# Post about MDX\n\nMDX is a JSX in Markdown loader, parser, and renderer for ambitious projects.\n")),(0,l.kt)("p",null,"After bundling and evaluating, we could get something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"<h1>Post about MDX</h1>\n<p>\n  MDX is a JSX in Markdown loader, parser, and renderer for ambitious projects.\n</p>\n<footer>\n  <p>By: Sue, Fred.</p>\n</footer>\n")),(0,l.kt)("p",null,"This is similar to what frontmatter allows in Markdown, but instead of supporting only data in something like YAML, MDX lets you use richer JavaScript structures."),(0,l.kt)("h5",{id:"defining-variables-with-exports"},"Defining variables with exports"),(0,l.kt)("p",null,"If you need to define a variable in your MDX document, you can use an export to do so.\nNot only do exports emit data, they instantiate data you can reference in JSX blocks:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'export const myVariable = "Yay!";\n\n# Hello, world!\n\n<div>{myVariable}</div>\n')),(0,l.kt)("h2",{id:"working-with-components"},"Working with components"),(0,l.kt)("p",null,"In addition to rendering components inline, you can also pass in components to be used instead of the default HTML elements that Markdown compiles to.\nThis allows you to use your existing components and even CSS-in-JS like ",(0,l.kt)("code",null,"styled-components "),"."),(0,l.kt)("p",null,"The ",(0,l.kt)("code",null,"components")," object is a mapping between the HTML name and the desired component you\u2019d like to render."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import React from "react";\nimport Hello from "../hello.mdx";\n\nconst MyH1 = (props) => <h1 style={{ color: "tomato" }} {...props} />;\nconst MyParagraph = (props) => (\n  <p style={{ fontSize: "18px", lineHeight: 1.6 }} />\n);\n\nconst components = {\n  h1: MyH1,\n  p: MyParagraph,\n};\n\nexport default () => <Hello components={components} />;\n')),(0,l.kt)("p",null,"You can also import your components from another location like your UI library:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport Hello from "../hello.mdx";\n\nimport { Text, Heading, Code, InlineCode } from "../my-ui-library";\n\nexport default () => (\n  <Hello\n    components={{\n      h1: Heading,\n      p: Text,\n      code: Code,\n      inlineCode: InlineCode,\n    }}\n  />\n);\n')),(0,l.kt)("p",null,"With the above, the ",(0,l.kt)("code",null,"Heading")," component will be rendered for any ",(0,l.kt)("code",null,"h1"),", ",(0,l.kt)("code",null,"Text")," for ",(0,l.kt)("code",null,"p")," elements, and so on."),(0,l.kt)("p",null,"In addition to HTML elements, there is one special mapping: ",(0,l.kt)("code",null,"inlineCode")," can be used for code inside paragraphs, tables, etc."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"/docs/table-of-components"},"Table of components")," for supported names."))}g.isMDXComponent=!0}}]);